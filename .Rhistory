Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
positions <- c('c', '1b', '2b', '3b', 'ss', 'of', 'dh')
urls <- character()
create_urls <- function(defensive){
for(pos in defensive){
urls <<- c(urls, paste0('https://www.fangraphs.com/projections?pos=', pos, '&stats=bat&type=rfangraphsdc&statgroup=fantasy'))
}
}
create_urls(positions)
print(urls)
hitter_projections <- read_html('https://www.fangraphs.com/projections?pos=ss&stats=bat&type=rfangraphsdc&statgroup=fantasy')
sp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=sta&type=rfangraphsdc&statgroup=fantasy&fantasypreset=classic&sortcol=20&sortdir=desc')
rp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=rel&type=rfangraphsdc&statgroup=fantasy&sortcol=8&sortdir=desc')
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
remotes::install_github("ropensci/RSelenium")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
install.packages("RSelenium")
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(dplyr)
library(rvest)
library('RSelenium') # remotes::install_github("ropensci/RSelenium")
library(dplyr)
library(rvest)
library('RSelenium') # remotes::install_github("ropensci/RSelenium")
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
remotes::install_github("ropensci/RSelenium")
install.packages('binman')
remotes::install_github("ropensci/RSelenium")
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(tidyverse)
rD <- rsDriver(browser="firefox", port=4545L, verbose=T)
remDr <- rD[["client"]]
remDr$navigate("https://www.fangraphs.com/projections?statgroup=fantasy&type=uzips")
remDr$navigate(url = "https://www.fangraphs.com/projections?statgroup=fantasy&type=uzips")
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(tidyverse)
rD <- rsDriver(browser="chrome", port=4545L, verbose=T)
remDr <- rD[["client"]]
remDr$navigate(url = "https://www.fangraphs.com/projections?statgroup=fantasy&type=uzips")
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(tidyverse)
rD <- rsDriver(browser="chrome", verbose=T)
remDr <- rD[["client"]]
binman::list_versions('seleniumserver')
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(tidyverse)
rD <- rsDriver(browser="chrome", version = '3.141.59', verbose=T)
remDr <- rD[["client"]]
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(tidyverse)
rD <- rsDriver(browser="chrome", port=4545L, verbose=T)
remDr <- rD[["client"]]
remDr
remDr$navigate(url = "https://www.fangraphs.com/projections?statgroup=fantasy&type=uzips")
?navigate()
remDr$navigate(url = "https://www.fangraphs.com/projections?pos=all&stats=bat&type=rfangraphsdc")
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(tidyverse)
rD <- rsDriver(browser='chrome', verbose=T)
remDr <- rD[["client"]]
remDr$open()
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(tidyverse)
rD <- rsDriver(browser='chrome', port = 4545L, verbose=T)
remDr <- rD[["client"]]
remDr$open()
library(httr)
remDr$open()
detach("package:httr", unload = TRUE)
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(tidyverse)
rD <- rsDriver(browser='chrome', port = 4545L, verbose=T)
remDr <- rD[["client"]]
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(tidyverse)
rD <- rsDriver(browser='chrome', port = 4545L, verbose=T)
remDr <- rD[["client"]]
remDr$open()
binman::list_versions("chromedriver")
rD <- rsDriver(browser='chrome', port = 4545L, verbose=T, check = T)
remDr <- rD[["client"]]
remDr$open()
rD <- rsDriver()
remDr <- rD[["client"]]
remDr$open()
rD
rD <- rsDriver(browser = c("chrome"))
remDr <- rD[["client"]]
remDr$open()
rD <- rsDriver(browser = c("chrome"))
#########################
### UPDATE 16/02/2020 ###
#########################
driver <- RSelenium::rsDriver(browser = "chrome",
chromever =
system2(command = "wmic",
args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',
stdout = TRUE,
stderr = TRUE) %>%
stringr::str_extract(pattern = "(?<=Version=)\\d+\\.\\d+\\.\\d+\\.") %>%
magrittr::extract(!is.na(.)) %>%
stringr::str_replace_all(pattern = "\\.",
replacement = "\\\\.") %>%
paste0("^",  .) %>%
stringr::str_subset(string =
binman::list_versions(appname = "chromedriver") %>%
dplyr::last()) %>%
as.numeric_version() %>%
max() %>%
as.character())
remote_driver <- driver[["client"]]
remote_driver$navigate("https://www.latlong.net/convert-address-to-lat-long.html")
rD <- rsDriver()
remDr <- rD[["client"]]
rD <- rsDriver(verbose = T, check = T)
remDr <- rD[["client"]]
/var/lib/rstudio-server/monitor/log/rstudio-server.log
selenium(retcommand=T)
library(wdman)
selenium(retcommand = T)
rD <- rsDriver(verbose = T, check = T)
remDr <- rD[["client"]]
rD <- rsDriver(port = 3000, verbose = T, check = T)
rD <- rsDriver(port = 3000, verbose = T, check = T)
rD <- rsDriver(browser = "chrome", port = 3000, verbose = T, check = T)
rD <- rsDriver(browser = "chrome", port = 3000L, verbose = T, check = T)
remDr <- rD[["client"]]
rD <- rsDriver(browser = "chrome", port = 3000L, verbose = T, check = T)
rD <- rsDriver(browser = "chrome", verbose = T, check = T)
rD <- rsDriver(browser = "chrome", port = free_port(), verbose = T, check = T)
install.packages('netstat')
install.packages('netstat')
sessionInfo()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(tidyverse)
rD <- rsDriver(browser = "chrome", verbose = T, check = T)
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(tidyverse)
RSelenium::getChromeProfile()
rD <- RSelenium::rsDriver(browser = "chrome", verbose = T, check = T)
install.packages("rJava")
rD <- rsDriver(browser = "chrome", verbose = T, check = T)
binman::list_versions('chrome')
rD <- RSelenium::rsDriver(browser = "chrome",
chromever =
system2(command = "google-chrome-stable",
args = "--version",
stdout = TRUE,
stderr = TRUE) %>%
stringr::str_extract(pattern = "(?<=Chrome )\d+\.\d+\.\d+\.") %>%
rD <- RSelenium::rsDriver(browser = "chrome",
chromever =
system2(command = "google-chrome-stable",
args = "--version",
stdout = TRUE,
stderr = TRUE) %>%
stringr::str_extract(pattern = "(?<=Chrome )\d+\.\d+\.\d+\.") %>%
rD$server$stop()
rD <- rsDriver(browser = "chrome", verbose = T, check = T)
install.packages('Docker')
sessionInfo()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
library(RSelenium) # remotes::install_github("ropensci/RSelenium")
library(tidyverse)
rD$server$stop()
rD <- rsDriver(browser = "firefox", verbose = T, check = T)
rD <- rsDriver(browser = "chrome", verbose = T, check = T)
install.packages('netstat')
install.packages('RSelenium')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
dat <- read_html("https://www.fangraphs.com/projections?statgroup=fantasy&type=uzips") %>% html_elements('#__NEXT_DATA__') %>% html_text() %>% jsonlite::fromJSON()
data <- dat$props$pageProps$dehydratedState$queries$state$data[[1]]
View(data)
dat <- read_html("https://www.fangraphs.com/projections?pos=all&stats=bat&type=rfangraphsdc&statgroup=fantasy") %>% html_elements('#__NEXT_DATA__') %>% html_text() %>% jsonlite::fromJSON()
data <- dat$props$pageProps$dehydratedState$queries$state$data[[1]]
dat <- read_html("https://www.fangraphs.com/projections?pos=all&stats=bat&type=rfangraphsdc&statgroup=fantasy") %>% html_elements('#__NEXT_DATA__') %>% html_text() %>% jsonlite::fromJSON()
data <- dat$props$pageProps$dehydratedState$queries$state$data[[1]]
clean_data <- data %>%
select(PlayerName, Team, G, PA, H, `2B`, `3B`, HR, R, RBI, BB, SO, SB)
View(dat)
View(clean_data)
clean_data <- data %>%
select(
PlayerName, minpos, Team, G, PA, H, `2B`, `3B`, HR, R, RBI, BB, SO, SB)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
clean_data %>% mutate(
`1B` = H - `2B` -`3B` - HR,
TB = `1B` + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB))
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
positions <- c('c', '1b', '2b', '3b', 'ss', 'of', 'dh')
urls <- character()
create_urls <- function(defensive){
for(pos in defensive){
urls <<- c(urls, paste0('https://www.fangraphs.com/projections?pos=', pos, '&stats=bat&type=rfangraphsdc&statgroup=fantasy'))
}
}
create_urls(positions)
print(urls)
hitter_projections <- read_html('https://www.fangraphs.com/projections?pos=ss&stats=bat&type=rfangraphsdc&statgroup=fantasy')
sp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=sta&type=rfangraphsdc&statgroup=fantasy&fantasypreset=classic&sortcol=20&sortdir=desc')
rp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=rel&type=rfangraphsdc&statgroup=fantasy&sortcol=8&sortdir=desc')
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
clean_data %>% mutate(
`1B` = H - `2B` -`3B` - HR,
TB = `1B` + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB))
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
clean_data %>% mutate(
`1B` = H - `2B` -`3B` - HR,
TB = `1B` + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB))
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
clean_data %>% mutate(
`1B` = H - `2B` -`3B` - HR,
TB = `1B` + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(PlayerName, minpos, Team, Points) %>%
arrange(desc(Points))
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
clean_batter_data %>% mutate(
`1B` = H - `2B` -`3B` - HR,
TB = `1B` + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(PlayerName, minpos, Team, Points) %>%
arrange(desc(Points))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
hitter_dat <- read_html("https://www.fangraphs.com/projections?pos=all&stats=bat&type=rfangraphsdc&statgroup=fantasy") %>% html_elements('#__NEXT_DATA__') %>% html_text() %>% jsonlite::fromJSON()
hitter_data <- hitter_dat$props$pageProps$dehydratedState$queries$state$data[[1]]
clean_batter_data <- data %>%
select(
PlayerName, minpos, Team, G, PA, H, `2B`, `3B`, HR, R, RBI, BB, SO, SB)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
clean_batter_data %>% mutate(
`1B` = H - `2B` -`3B` - HR,
TB = `1B` + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(PlayerName, minpos, Team, Points) %>%
arrange(desc(Points))
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
hitter_dat <- read_html("https://www.fangraphs.com/projections?pos=all&stats=bat&type=rfangraphsdc&statgroup=fantasy") %>% html_elements('#__NEXT_DATA__') %>% html_text() %>% jsonlite::fromJSON()
hitter_data <- hitter_dat$props$pageProps$dehydratedState$queries$state$data[[1]]
hitter_dat <- read_html("https://www.fangraphs.com/projections?pos=&stats=pit&type=rfangraphsdc&statgroup=fantasy") %>% html_elements('#__NEXT_DATA__') %>% html_text() %>% jsonlite::fromJSON()
hitter_data <- hitter_dat$props$pageProps$dehydratedState$queries$state$data[[1]]
hitter_dat <- read_html("https://www.fangraphs.com/projections?pos=all&stats=bat&type=rfangraphsdc&statgroup=fantasy") %>% html_elements('#__NEXT_DATA__') %>% html_text() %>% jsonlite::fromJSON()
hitter_data <- hitter_dat$props$pageProps$dehydratedState$queries$state$data[[1]]
pitcher_dat <- read_html("https://www.fangraphs.com/projections?pos=&stats=pit&type=rfangraphsdc&statgroup=fantasy") %>% html_elements('#__NEXT_DATA__') %>% html_text() %>% jsonlite::fromJSON()
pitcher_data <- hitter_dat$props$pageProps$dehydratedState$queries$state$data[[1]]
View(pitcher_data)
hitter_dat <- read_html("https://www.fangraphs.com/projections?pos=all&stats=bat&type=rfangraphsdc&statgroup=fantasy") %>% html_elements('#__NEXT_DATA__') %>% html_text() %>% jsonlite::fromJSON()
hitter_data <- hitter_dat$props$pageProps$dehydratedState$queries$state$data[[1]]
pitcher_dat <- read_html("https://www.fangraphs.com/projections?pos=&stats=pit&type=rfangraphsdc&statgroup=fantasy") %>% html_elements('#__NEXT_DATA__') %>% html_text() %>% jsonlite::fromJSON()
pitcher_data <- pitcher_dat$props$pageProps$dehydratedState$queries$state$data[[1]]
clean_hitter_data <- hitter_data %>%
select(
PlayerName, minpos, Team, H, `2B`, `3B`, HR, R, RBI, BB, SO, SB
)
clean_pitcher_data <- pitcher_data %>%
select(
PlayerName, Team, IP, H, ER, BB, SO, W, L, SV, HLD
)
View(clean_pitcher_data)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
clean_hitter_data %>%
mutate(
`1B` = H - `2B` -`3B` - HR,
TB = `1B` + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(PlayerName, minpos, Team, Points) %>%
arrange(desc(Points))
clean_pitcher_data %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(PlayerName, Team, Points) %>%
arrange(desc(Points))
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
hitter_dat <- read_html("https://www.fangraphs.com/projections?pos=all&stats=bat&type=rfangraphsdc&statgroup=fantasy") %>% html_elements('#__NEXT_DATA__') %>% html_text() %>% jsonlite::fromJSON()
hitter_data <- hitter_dat$props$pageProps$dehydratedState$queries$state$data[[1]]
pitcher_dat <- read_html("https://www.fangraphs.com/projections?pos=&stats=pit&type=rfangraphsdc&statgroup=fantasy") %>% html_elements('#__NEXT_DATA__') %>% html_text() %>% jsonlite::fromJSON()
pitcher_data <- pitcher_dat$props$pageProps$dehydratedState$queries$state$data[[1]]
clean_hitter_data <- hitter_data %>%
select(
PlayerName, minpos, Team, H, `2B`, `3B`, HR, R, RBI, BB, SO, SB
)
clean_pitcher_data <- pitcher_data %>%
select(
PlayerName, Team, IP, H, ER, BB, SO, W, L, SV, HLD
)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
clean_hitter_data %>%
mutate(
`1B` = H - `2B` -`3B` - HR,
TB = `1B` + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(PlayerName, minpos, Team, Points) %>%
arrange(desc(Points))
clean_pitcher_data %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(PlayerName, Team, Points) %>%
arrange(desc(Points))
