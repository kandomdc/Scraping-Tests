html_nodes('table') %>%
.[[6]] %>%
html_table()
}
hitter_projections %>%
html_nodes('table') %>%
print()
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[6]] %>%
html_table()
}
hitter_projections %>%
html_nodes('table') %>%
.[[6]]
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[6]] %>%
html_table()
}
testTable <- hitter_projections %>%
html_nodes('table') %>%
.[[6]]
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
View(testTable)
?html_table
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[6]] %>%
html_table()
}
testTable <- hitter_projections %>%
html_nodes('table') %>%
.[[6]] %>% html_table()
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
testTable <- hitter_projections %>%
html_nodes('table') %>%
.[[6]] %>% html_table()
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
testTable <- hitter_projections %>%
html_nodes('table') %>%
.[[7]] %>% html_table()
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
#testTable <-
hitter_projections %>%
html_nodes('table')
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
#testTable <-
hitter_projections %>%
html_nodes()
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
#testTable <-
hitter_projections %>%
html_nodes('select')
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(janitor)
library(rvest)
library(stringr)
positions <- c('c', '1b', '2b', '3b', 'ss', 'of', 'dh')
urls <- character()
create_urls <- function(defensive){
for(pos in defensive){
urls <<- c(urls, paste0('https://www.fangraphs.com/projections?pos=', pos, '&stats=bat&type=rfangraphsdc&statgroup=fantasy'))
}
}
create_urls(positions)
print(urls)
hitter_projections <- read_html('https://www.fangraphs.com/projections?pos=of&stats=bat&type=rfangraphsdc&statgroup=fantasy')
sp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=sta&type=rfangraphsdc&statgroup=fantasy&fantasypreset=classic&sortcol=20&sortdir=desc')
rp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=rel&type=rfangraphsdc&statgroup=fantasy&sortcol=8&sortdir=desc')
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
positions <- c('c', '1b', '2b', '3b', 'ss', 'of', 'dh')
urls <- character()
create_urls <- function(defensive){
for(pos in defensive){
urls <<- c(urls, paste0('https://www.fangraphs.com/projections?pos=', pos, '&stats=bat&type=rfangraphsdc&statgroup=fantasy'))
}
}
create_urls(positions)
print(urls)
hitter_projections <- read_html('https://www.fangraphs.com/projections?pos=of&stats=bat&type=rfangraphsdc&statgroup=fantasy')
sp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=sta&type=rfangraphsdc&statgroup=fantasy&fantasypreset=classic&sortcol=20&sortdir=desc')
rp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=rel&type=rfangraphsdc&statgroup=fantasy&sortcol=8&sortdir=desc')
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
positions <- c('c', '1b', '2b', '3b', 'ss', 'of', 'dh')
urls <- character()
create_urls <- function(defensive){
for(pos in defensive){
urls <<- c(urls, paste0('https://www.fangraphs.com/projections?pos=', pos, '&stats=bat&type=rfangraphsdc&statgroup=fantasy'))
}
}
create_urls(positions)
print(urls)
hitter_projections <- read_html('https://www.fangraphs.com/projections?pos=of&stats=bat&type=rfangraphsdc&statgroup=fantasy')
sp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=sta&type=rfangraphsdc&statgroup=fantasy&fantasypreset=classic&sortcol=20&sortdir=desc')
rp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=rel&type=rfangraphsdc&statgroup=fantasy&sortcol=8&sortdir=desc')
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
positions <- c('c', '1b', '2b', '3b', 'ss', 'of', 'dh')
urls <- character()
create_urls <- function(defensive){
for(pos in defensive){
urls <<- c(urls, paste0('https://www.fangraphs.com/projections?pos=', pos, '&stats=bat&type=rfangraphsdc&statgroup=fantasy'))
}
}
create_urls(positions)
print(urls)
hitter_projections <- read_html('https://www.fangraphs.com/projections?pos=ss&stats=bat&type=rfangraphsdc&statgroup=fantasy')
sp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=sta&type=rfangraphsdc&statgroup=fantasy&fantasypreset=classic&sortcol=20&sortdir=desc')
rp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=rel&type=rfangraphsdc&statgroup=fantasy&sortcol=8&sortdir=desc')
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
positions <- c('c', '1b', '2b', '3b', 'ss', 'of', 'dh')
urls <- character()
create_urls <- function(defensive){
for(pos in defensive){
urls <<- c(urls, paste0('https://www.fangraphs.com/projections?pos=', pos, '&stats=bat&type=rfangraphsdc&statgroup=fantasy'))
}
}
create_urls(positions)
print(urls)
hitter_projections <- read_html('https://www.fangraphs.com/projections?pos=c&stats=bat&type=rfangraphsdc&statgroup=fantasy')
sp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=sta&type=rfangraphsdc&statgroup=fantasy&fantasypreset=classic&sortcol=20&sortdir=desc')
rp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=rel&type=rfangraphsdc&statgroup=fantasy&sortcol=8&sortdir=desc')
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
positions <- c('c', '1b', '2b', '3b', 'ss', 'of', 'dh')
urls <- character()
create_urls <- function(defensive){
for(pos in defensive){
urls <<- c(urls, paste0('https://www.fangraphs.com/projections?pos=', pos, '&stats=bat&type=rfangraphsdc&statgroup=fantasy'))
}
}
create_urls(positions)
print(urls)
hitter_projections <- read_html('https://www.fangraphs.com/projections?pos=1b&stats=bat&type=rfangraphsdc&statgroup=fantasy')
sp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=sta&type=rfangraphsdc&statgroup=fantasy&fantasypreset=classic&sortcol=20&sortdir=desc')
rp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=rel&type=rfangraphsdc&statgroup=fantasy&sortcol=8&sortdir=desc')
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
positions <- c('c', '1b', '2b', '3b', 'ss', 'of', 'dh')
urls <- character()
create_urls <- function(defensive){
for(pos in defensive){
urls <<- c(urls, paste0('https://www.fangraphs.com/projections?pos=', pos, '&stats=bat&type=rfangraphsdc&statgroup=fantasy'))
}
}
create_urls(positions)
print(urls)
hitter_projections <- read_html('https://www.fangraphs.com/projections?pos=2b&stats=bat&type=rfangraphsdc&statgroup=fantasy')
sp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=sta&type=rfangraphsdc&statgroup=fantasy&fantasypreset=classic&sortcol=20&sortdir=desc')
rp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=rel&type=rfangraphsdc&statgroup=fantasy&sortcol=8&sortdir=desc')
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
positions <- c('c', '1b', '2b', '3b', 'ss', 'of', 'dh')
urls <- character()
create_urls <- function(defensive){
for(pos in defensive){
urls <<- c(urls, paste0('https://www.fangraphs.com/projections?pos=', pos, '&stats=bat&type=rfangraphsdc&statgroup=fantasy'))
}
}
create_urls(positions)
print(urls)
hitter_projections <- read_html('https://www.fangraphs.com/projections?pos=3b&stats=bat&type=rfangraphsdc&statgroup=fantasy')
sp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=sta&type=rfangraphsdc&statgroup=fantasy&fantasypreset=classic&sortcol=20&sortdir=desc')
rp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=rel&type=rfangraphsdc&statgroup=fantasy&sortcol=8&sortdir=desc')
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
positions <- c('c', '1b', '2b', '3b', 'ss', 'of', 'dh')
urls <- character()
create_urls <- function(defensive){
for(pos in defensive){
urls <<- c(urls, paste0('https://www.fangraphs.com/projections?pos=', pos, '&stats=bat&type=rfangraphsdc&statgroup=fantasy'))
}
}
create_urls(positions)
print(urls)
hitter_projections <- read_html('https://www.fangraphs.com/projections?pos=ss&stats=bat&type=rfangraphsdc&statgroup=fantasy')
sp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=sta&type=rfangraphsdc&statgroup=fantasy&fantasypreset=classic&sortcol=20&sortdir=desc')
rp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=rel&type=rfangraphsdc&statgroup=fantasy&sortcol=8&sortdir=desc')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rvest)
positions <- c('c', '1b', '2b', '3b', 'ss', 'of', 'dh')
urls <- character()
create_urls <- function(defensive){
for(pos in defensive){
urls <<- c(urls, paste0('https://www.fangraphs.com/projections?pos=', pos, '&stats=bat&type=rfangraphsdc&statgroup=fantasy'))
}
}
create_urls(positions)
print(urls)
hitter_projections <- read_html('https://www.fangraphs.com/projections?pos=ss&stats=bat&type=rfangraphsdc&statgroup=fantasy')
sp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=sta&type=rfangraphsdc&statgroup=fantasy&fantasypreset=classic&sortcol=20&sortdir=desc')
rp_projections <- read_html('https://www.fangraphs.com/projections?pos=&stats=rel&type=rfangraphsdc&statgroup=fantasy&sortcol=8&sortdir=desc')
extract_table = function(projections) {
projections %>%
html_nodes('table') %>%
.[[7]] %>%
html_table()
}
hitter_stats <- extract_table(hitter_projections)
sp_stats <- extract_table(sp_projections)
rp_stats <- extract_table(rp_projections)
compute_batter_points <- function(R, TB, RBI, BB, K, SB) {
R + TB + RBI + BB - K + SB
}
compute_pitcher_points <- function(IP, H, ER, BB, K, W, L, SV, HD) {
3*IP - H - 2*ER - BB + K + 2*W - 2*L + 5*SV + 2*HD
}
hitter_stats %>%
mutate(
TB = H + 2*`2B` + 3*`3B` + 4*HR,
Points = compute_batter_points(R, TB, RBI, BB, SO, SB)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
sp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
rp_stats %>%
mutate(Points = compute_pitcher_points(IP, H, ER, BB, SO, W, L, SV, HLD)) %>%
select(Name, Team, Points) %>%
arrange(desc(Points))
